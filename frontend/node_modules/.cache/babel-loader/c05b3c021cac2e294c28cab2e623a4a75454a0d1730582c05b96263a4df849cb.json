{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishan kant\\\\Desktop\\\\Js\\\\game\\\\frontend\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/components/Room.js\n// import \"react-chessboard/dist/chessboard.css\";\nimport { Chessboard } from \"react-chessboard\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n// import Chessboard from \"chessboardjsx\"; // Using chessboardjsx for chessboard UI\nimport io from \"socket.io-client\";\nimport Chat from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\"; // Your backend server URL\n\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\") || \"\";\n  const [role, setRole] = useState(null); // white, black, viewer\n  const [players, setPlayers] = useState({\n    white: null,\n    black: null\n  });\n  const [turn, setTurn] = useState(\"white\");\n  const [fen, setFen] = useState(\"start\"); // chessboard state in FEN\n  const socketRef = useRef(null);\n\n  // Initialize chess.js to validate moves & manage game state\n  const Chess = require(\"chess.js\").Chess;\n  const chessRef = useRef(new Chess());\n  useEffect(() => {\n    if (!username) {\n      navigate(\"/\");\n      return;\n    }\n\n    // Connect socket\n    socketRef.current = io(SOCKET_SERVER_URL);\n    socketRef.current.emit(\"joinRoom\", {\n      roomId,\n      username\n    });\n    socketRef.current.on(\"roleAssigned\", assignedRole => {\n      setRole(assignedRole);\n    });\n    socketRef.current.on(\"playersUpdate\", playersData => {\n      setPlayers(playersData);\n    });\n    socketRef.current.on(\"chessMove\", ({\n      move,\n      by\n    }) => {\n      // Update chessboard if move valid and update turn\n      chessRef.current.move(move);\n      setFen(chessRef.current.fen());\n      setTurn(by === \"white\" ? \"black\" : \"white\");\n    });\n    socketRef.current.on(\"invalidMove\", msg => {\n      alert(msg);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId, username, navigate]);\n\n  // On chessboard drop (attempt move)\n  const onDrop = ({\n    sourceSquare,\n    targetSquare,\n    piece\n  }) => {\n    if (role !== turn) {\n      alert(\"It's not your turn\");\n      return;\n    }\n    const move = {\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // always promote to queen for simplicity\n    };\n    // Check if move is legal using chess.js\n    const result = chessRef.current.move(move);\n    if (result) {\n      setFen(chessRef.current.fen());\n      setTurn(role === \"white\" ? \"black\" : \"white\");\n      socketRef.current.emit(\"chessMove\", {\n        roomId,\n        move\n      });\n    } else {\n      alert(\"Invalid move\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col bg-gray-900 text-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-4\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [\"You are: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: role || \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [\"Turn: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: turn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [\"Players:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"White: \", players.white || \"Waiting...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Black: \", players.black || \"Waiting...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n          position: fen === \"start\" ? undefined : fen,\n          onDrop: onDrop,\n          draggable: role === turn,\n          transitionDuration: 300,\n          calcWidth: ({\n            screenWidth\n          }) => Math.min(500, screenWidth * 0.7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        socket: socketRef.current,\n        roomId: roomId,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"eq1wqlTWEtyWNtlZedz/7iTaBI4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["Chessboard","React","useEffect","useState","useRef","useParams","useNavigate","io","Chat","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","Room","_s","roomId","navigate","username","localStorage","getItem","role","setRole","players","setPlayers","white","black","turn","setTurn","fen","setFen","socketRef","Chess","require","chessRef","current","emit","on","assignedRole","playersData","move","by","msg","alert","disconnect","onDrop","sourceSquare","targetSquare","piece","from","to","promotion","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","undefined","draggable","transitionDuration","calcWidth","screenWidth","Math","min","socket","_c","$RefreshReg$"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Room.js"],"sourcesContent":["// src/components/Room.js\r\n// import \"react-chessboard/dist/chessboard.css\";\r\nimport { Chessboard } from \"react-chessboard\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n// import Chessboard from \"chessboardjsx\"; // Using chessboardjsx for chessboard UI\r\nimport io from \"socket.io-client\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\"; // Your backend server URL\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  const username = localStorage.getItem(\"username\") || \"\";\r\n  const [role, setRole] = useState(null); // white, black, viewer\r\n  const [players, setPlayers] = useState({ white: null, black: null });\r\n  const [turn, setTurn] = useState(\"white\");\r\n  const [fen, setFen] = useState(\"start\"); // chessboard state in FEN\r\n  const socketRef = useRef(null);\r\n\r\n  // Initialize chess.js to validate moves & manage game state\r\n  const Chess = require(\"chess.js\").Chess;\r\n  const chessRef = useRef(new Chess());\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    // Connect socket\r\n    socketRef.current = io(SOCKET_SERVER_URL);\r\n\r\n    socketRef.current.emit(\"joinRoom\", { roomId, username });\r\n\r\n    socketRef.current.on(\"roleAssigned\", (assignedRole) => {\r\n      setRole(assignedRole);\r\n    });\r\n\r\n    socketRef.current.on(\"playersUpdate\", (playersData) => {\r\n      setPlayers(playersData);\r\n    });\r\n\r\n    socketRef.current.on(\"chessMove\", ({ move, by }) => {\r\n      // Update chessboard if move valid and update turn\r\n      chessRef.current.move(move);\r\n      setFen(chessRef.current.fen());\r\n      setTurn(by === \"white\" ? \"black\" : \"white\");\r\n    });\r\n\r\n    socketRef.current.on(\"invalidMove\", (msg) => {\r\n      alert(msg);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  // On chessboard drop (attempt move)\r\n  const onDrop = ({ sourceSquare, targetSquare, piece }) => {\r\n    if (role !== turn) {\r\n      alert(\"It's not your turn\");\r\n      return;\r\n    }\r\n    const move = {\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to queen for simplicity\r\n    };\r\n    // Check if move is legal using chess.js\r\n    const result = chessRef.current.move(move);\r\n    if (result) {\r\n      setFen(chessRef.current.fen());\r\n      setTurn(role === \"white\" ? \"black\" : \"white\");\r\n      socketRef.current.emit(\"chessMove\", { roomId, move });\r\n    } else {\r\n      alert(\"Invalid move\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-gray-900 text-white p-4\">\r\n      <h2 className=\"text-xl mb-4\">Room: {roomId}</h2>\r\n      <div className=\"flex flex-row gap-4\">\r\n        <div>\r\n          <div className=\"mb-2\">\r\n            You are: <span className=\"font-bold\">{role || \"...\"}</span>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            Turn: <span className=\"font-bold\">{turn}</span>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            Players:\r\n            <ul>\r\n              <li>White: {players.white || \"Waiting...\"}</li>\r\n              <li>Black: {players.black || \"Waiting...\"}</li>\r\n            </ul>\r\n          </div>\r\n          <Chessboard\r\n            position={fen === \"start\" ? undefined : fen}\r\n            onDrop={onDrop}\r\n            draggable={role === turn}\r\n            transitionDuration={300}\r\n            calcWidth={({ screenWidth }) => Math.min(500, screenWidth * 0.7)}\r\n          />\r\n        </div>\r\n        <Chat socket={socketRef.current} roomId={roomId} username={username} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":";;AAAA;AACA;AACA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD;AACA,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAG,uBAAuB,CAAC,CAAC;;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACwB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzC,MAAM0B,SAAS,GAAGzB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAM0B,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC,CAACD,KAAK;EACvC,MAAME,QAAQ,GAAG5B,MAAM,CAAC,IAAI0B,KAAK,CAAC,CAAC,CAAC;EAEpC5B,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,QAAQ,EAAE;MACbD,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;;IAEA;IACAc,SAAS,CAACI,OAAO,GAAG1B,EAAE,CAACI,iBAAiB,CAAC;IAEzCkB,SAAS,CAACI,OAAO,CAACC,IAAI,CAAC,UAAU,EAAE;MAAEpB,MAAM;MAAEE;IAAS,CAAC,CAAC;IAExDa,SAAS,CAACI,OAAO,CAACE,EAAE,CAAC,cAAc,EAAGC,YAAY,IAAK;MACrDhB,OAAO,CAACgB,YAAY,CAAC;IACvB,CAAC,CAAC;IAEFP,SAAS,CAACI,OAAO,CAACE,EAAE,CAAC,eAAe,EAAGE,WAAW,IAAK;MACrDf,UAAU,CAACe,WAAW,CAAC;IACzB,CAAC,CAAC;IAEFR,SAAS,CAACI,OAAO,CAACE,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEG,IAAI;MAAEC;IAAG,CAAC,KAAK;MAClD;MACAP,QAAQ,CAACC,OAAO,CAACK,IAAI,CAACA,IAAI,CAAC;MAC3BV,MAAM,CAACI,QAAQ,CAACC,OAAO,CAACN,GAAG,CAAC,CAAC,CAAC;MAC9BD,OAAO,CAACa,EAAE,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;IAC7C,CAAC,CAAC;IAEFV,SAAS,CAACI,OAAO,CAACE,EAAE,CAAC,aAAa,EAAGK,GAAG,IAAK;MAC3CC,KAAK,CAACD,GAAG,CAAC;IACZ,CAAC,CAAC;IAEF,OAAO,MAAM;MACXX,SAAS,CAACI,OAAO,CAACS,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAAC5B,MAAM,EAAEE,QAAQ,EAAED,QAAQ,CAAC,CAAC;;EAEhC;EACA,MAAM4B,MAAM,GAAGA,CAAC;IAAEC,YAAY;IAAEC,YAAY;IAAEC;EAAM,CAAC,KAAK;IACxD,IAAI3B,IAAI,KAAKM,IAAI,EAAE;MACjBgB,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF;IACA,MAAMH,IAAI,GAAG;MACXS,IAAI,EAAEH,YAAY;MAClBI,EAAE,EAAEH,YAAY;MAChBI,SAAS,EAAE,GAAG,CAAE;IAClB,CAAC;IACD;IACA,MAAMC,MAAM,GAAGlB,QAAQ,CAACC,OAAO,CAACK,IAAI,CAACA,IAAI,CAAC;IAC1C,IAAIY,MAAM,EAAE;MACVtB,MAAM,CAACI,QAAQ,CAACC,OAAO,CAACN,GAAG,CAAC,CAAC,CAAC;MAC9BD,OAAO,CAACP,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;MAC7CU,SAAS,CAACI,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE;QAAEpB,MAAM;QAAEwB;MAAK,CAAC,CAAC;IACvD,CAAC,MAAM;MACLG,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKyC,SAAS,EAAC,uDAAuD;IAAAC,QAAA,gBACpE1C,OAAA;MAAIyC,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,QAAM,EAACtC,MAAM;IAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChD9C,OAAA;MAAKyC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC1C,OAAA;QAAA0C,QAAA,gBACE1C,OAAA;UAAKyC,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,WACX,eAAA1C,OAAA;YAAMyC,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEjC,IAAI,IAAI;UAAK;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eACN9C,OAAA;UAAKyC,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,QACd,eAAA1C,OAAA;YAAMyC,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAE3B;UAAI;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACN9C,OAAA;UAAKyC,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,UAEpB,eAAA1C,OAAA;YAAA0C,QAAA,gBACE1C,OAAA;cAAA0C,QAAA,GAAI,SAAO,EAAC/B,OAAO,CAACE,KAAK,IAAI,YAAY;YAAA;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/C9C,OAAA;cAAA0C,QAAA,GAAI,SAAO,EAAC/B,OAAO,CAACG,KAAK,IAAI,YAAY;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACN9C,OAAA,CAACV,UAAU;UACTyD,QAAQ,EAAE9B,GAAG,KAAK,OAAO,GAAG+B,SAAS,GAAG/B,GAAI;UAC5CgB,MAAM,EAAEA,MAAO;UACfgB,SAAS,EAAExC,IAAI,KAAKM,IAAK;UACzBmC,kBAAkB,EAAE,GAAI;UACxBC,SAAS,EAAEA,CAAC;YAAEC;UAAY,CAAC,KAAKC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAEF,WAAW,GAAG,GAAG;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9C,OAAA,CAACF,IAAI;QAACyD,MAAM,EAAEpC,SAAS,CAACI,OAAQ;QAACnB,MAAM,EAAEA,MAAO;QAACE,QAAQ,EAAEA;MAAS;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CArGID,IAAI;EAAA,QACWP,SAAS,EACXC,WAAW;AAAA;AAAA4D,EAAA,GAFxBtD,IAAI;AAuGV,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}