{"ast":null,"code":"// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./Chat.css\";\n\n// const Chat = ({ socket, roomId, username }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!socket) return;\n\n//     const handleNewMessage = (message) => {\n//       setMessages((prev) => [...prev, message]);\n//     };\n\n//     socket.on(\"chatMessage\", handleNewMessage);\n\n//     return () => {\n//       socket.off(\"chatMessage\", handleNewMessage);\n//     };\n//   }, [socket]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   }, [messages]);\n\n//   const sendMessage = () => {\n//     if (input.trim() === \"\") return;\n\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\n//     setInput(\"\");\n//   };\n\n//   const handleKeyDown = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       sendMessage();\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <h3 className=\"chat-header\">Chat</h3>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div\n//             key={idx}\n//             className={`chat-message ${\n//               msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"\n//             }`}\n//           >\n//             <strong>{msg.username}: </strong>\n//             <span>{msg.message}</span>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <textarea\n//         rows={2}\n//         value={input}\n//         onChange={(e) => setInput(e.target.value)}\n//         onKeyDown={handleKeyDown}\n//         placeholder=\"Type a message...\"\n//         className=\"chat-input\"\n//       />\n//       <button onClick={sendMessage} className=\"chat-send-button\">\n//         Send\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\n// // import React, { useState, useEffect, useRef } from \"react\";\n// // import \"./Chat.css\";\n\n// // const Chat = ({ socket, roomId, username }) => {\n// //   const [messages, setMessages] = useState([]);\n// //   const [input, setInput] = useState(\"\");\n// //   const messagesEndRef = useRef(null);\n\n// //   useEffect(() => {\n// //     if (!socket) return;\n\n// //     const handleNewMessage = (message) => {\n// //       setMessages((prev) => [...prev, message]);\n// //     };\n\n// //     socket.on(\"chatMessage\", handleNewMessage);\n\n// //     return () => {\n// //       socket.off(\"chatMessage\", handleNewMessage);\n// //     };\n// //   }, [socket]);\n\n// //   useEffect(() => {\n// //     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n// //   }, [messages]);\n\n// //   const sendMessage = () => {\n// //     if (input.trim() === \"\") return;\n\n// //     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\n// //     setInput(\"\");\n// //   };\n\n// //   const handleKeyDown = (e) => {\n// //     if (e.key === \"Enter\" && !e.shiftKey) {\n// //       e.preventDefault();\n// //       sendMessage();\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"chat-container\">\n// //       <h3 className=\"chat-header\">Chat</h3>\n// //       <div className=\"chat-messages\">\n// //         {messages.map((msg, idx) => {\n// //           const isOwnMessage = msg.username === username;\n// //           return (\n// //             <div\n// //               key={idx}\n// //               className={`message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`}\n// //             >\n// //               <div className=\"message-bubble\">\n// //                 {!isOwnMessage && (\n// //                   <div className=\"message-username\">{msg.username}</div>\n// //                 )}\n// //                 <div className=\"message-text\">{msg.message}</div>\n// //               </div>\n// //             </div>\n// //           );\n// //         })}\n// //         <div ref={messagesEndRef} />\n// //       </div>\n// //       <div className=\"chat-input-container\">\n// //         <textarea\n// //           rows={2}\n// //           value={input}\n// //           onChange={(e) => setInput(e.target.value)}\n// //           onKeyDown={handleKeyDown}\n// //           placeholder=\"Type a message...\"\n// //           className=\"chat-input\"\n// //         />\n// //         <button onClick={sendMessage} className=\"chat-send-button\">\n// //           Send\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Chat;","map":{"version":3,"names":[],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Chat.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\n// import \"./Chat.css\";\r\n\r\n\r\n// const Chat = ({ socket, roomId, username }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [input, setInput] = useState(\"\");\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     if (!socket) return;\r\n\r\n//     const handleNewMessage = (message) => {\r\n//       setMessages((prev) => [...prev, message]);\r\n//     };\r\n\r\n//     socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n//     return () => {\r\n//       socket.off(\"chatMessage\", handleNewMessage);\r\n//     };\r\n//   }, [socket]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   }, [messages]);\r\n\r\n//   const sendMessage = () => {\r\n//     if (input.trim() === \"\") return;\r\n\r\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n//     setInput(\"\");\r\n//   };\r\n\r\n//   const handleKeyDown = (e) => {\r\n//     if (e.key === \"Enter\" && !e.shiftKey) {\r\n//       e.preventDefault();\r\n//       sendMessage();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chat-container\">\r\n//       <h3 className=\"chat-header\">Chat</h3>\r\n//       <div className=\"chat-messages\">\r\n//         {messages.map((msg, idx) => (\r\n//           <div\r\n//             key={idx}\r\n//             className={`chat-message ${\r\n//               msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"\r\n//             }`}\r\n//           >\r\n//             <strong>{msg.username}: </strong>\r\n//             <span>{msg.message}</span>\r\n//           </div>\r\n//         ))}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n//       <textarea\r\n//         rows={2}\r\n//         value={input}\r\n//         onChange={(e) => setInput(e.target.value)}\r\n//         onKeyDown={handleKeyDown}\r\n//         placeholder=\"Type a message...\"\r\n//         className=\"chat-input\"\r\n//       />\r\n//       <button onClick={sendMessage} className=\"chat-send-button\">\r\n//         Send\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\n// // import React, { useState, useEffect, useRef } from \"react\";\r\n// // import \"./Chat.css\";\r\n\r\n// // const Chat = ({ socket, roomId, username }) => {\r\n// //   const [messages, setMessages] = useState([]);\r\n// //   const [input, setInput] = useState(\"\");\r\n// //   const messagesEndRef = useRef(null);\r\n\r\n// //   useEffect(() => {\r\n// //     if (!socket) return;\r\n\r\n// //     const handleNewMessage = (message) => {\r\n// //       setMessages((prev) => [...prev, message]);\r\n// //     };\r\n\r\n// //     socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n// //     return () => {\r\n// //       socket.off(\"chatMessage\", handleNewMessage);\r\n// //     };\r\n// //   }, [socket]);\r\n\r\n// //   useEffect(() => {\r\n// //     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n// //   }, [messages]);\r\n\r\n// //   const sendMessage = () => {\r\n// //     if (input.trim() === \"\") return;\r\n\r\n// //     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n// //     setInput(\"\");\r\n// //   };\r\n\r\n// //   const handleKeyDown = (e) => {\r\n// //     if (e.key === \"Enter\" && !e.shiftKey) {\r\n// //       e.preventDefault();\r\n// //       sendMessage();\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"chat-container\">\r\n// //       <h3 className=\"chat-header\">Chat</h3>\r\n// //       <div className=\"chat-messages\">\r\n// //         {messages.map((msg, idx) => {\r\n// //           const isOwnMessage = msg.username === username;\r\n// //           return (\r\n// //             <div\r\n// //               key={idx}\r\n// //               className={`message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`}\r\n// //             >\r\n// //               <div className=\"message-bubble\">\r\n// //                 {!isOwnMessage && (\r\n// //                   <div className=\"message-username\">{msg.username}</div>\r\n// //                 )}\r\n// //                 <div className=\"message-text\">{msg.message}</div>\r\n// //               </div>\r\n// //             </div>\r\n// //           );\r\n// //         })}\r\n// //         <div ref={messagesEndRef} />\r\n// //       </div>\r\n// //       <div className=\"chat-input-container\">\r\n// //         <textarea\r\n// //           rows={2}\r\n// //           value={input}\r\n// //           onChange={(e) => setInput(e.target.value)}\r\n// //           onKeyDown={handleKeyDown}\r\n// //           placeholder=\"Type a message...\"\r\n// //           className=\"chat-input\"\r\n// //         />\r\n// //         <button onClick={sendMessage} className=\"chat-send-button\">\r\n// //           Send\r\n// //         </button>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Chat;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}