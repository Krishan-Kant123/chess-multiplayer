{"ast":null,"code":"import{Chessboard}from\"react-chessboard\";import React,{useEffect,useState,useRef}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import io from\"socket.io-client\";import Chat from\"./Chat\";import{Chess}from\"chess.js\";import\"./Room.css\";import toast from\"react-hot-toast\";// const SOCKET_SERVER_URL = \"http://localhost:4000\";\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const SOCKET_SERVER_URL=\"https://chess-multiplayer-rhci.onrender.com\";const Room=()=>{const{roomId}=useParams();const navigate=useNavigate();const username=localStorage.getItem(\"username\")||\"\";const[role,setRole]=useState(null);const[turn,setTurn]=useState(\"white\");const[fen,setFen]=useState(\"start\");const[highlightSquares,setHighlightSquares]=useState({});const[boardWidth,setBoardWidth]=useState(400);const[selectedSquare,setSelectedSquare]=useState(null);// 👈 New state\nconst socketRef=useRef(null);const chessRef=useRef(new Chess());const containerRef=useRef(null);useEffect(()=>{const calculateBoardWidth=()=>{if(containerRef.current){const containerWidth=containerRef.current.offsetWidth;const padding=32;const maxWidth=Math.min(containerWidth-padding,400);setBoardWidth(Math.max(maxWidth,280));}};calculateBoardWidth();window.addEventListener(\"resize\",calculateBoardWidth);return()=>window.removeEventListener(\"resize\",calculateBoardWidth);},[]);useEffect(()=>{if(!username){navigate(\"/\");return;}socketRef.current=io(SOCKET_SERVER_URL);socketRef.current.emit(\"joinRoom\",{roomId,username});socketRef.current.on(\"roleAssigned\",assignedRole=>{setRole(assignedRole);});socketRef.current.on(\"turnUpdate\",newTurn=>{setTurn(newTurn);});socketRef.current.on(\"chessMove\",_ref=>{let{move,by}=_ref;if(by!==role){try{const result=chessRef.current.move(move);if(result){setFen(chessRef.current.fen());setTurn(chessRef.current.turn()===\"w\"?\"white\":\"black\");checkGameStatus();}}catch(error){console.error(\"Error applying move:\",error,move);}}});socketRef.current.on(\"invalidMove\",msg=>{toast.error(msg);});return()=>{socketRef.current.disconnect();};},[roomId,navigate]);const checkGameStatus=()=>{if(chessRef.current.isCheckmate()){toast.success(\"Checkmate! \".concat(turn===\"white\"?\"Black\":\"White\",\" wins.\"));}else if(chessRef.current.isStalemate()){toast(\"Stalemate!\",{icon:\"🤝\"});}else if(chessRef.current.isCheck()){toast(\"Check!\",{icon:\"⚠️\"});}};const onPieceDrop=(sourceSquare,targetSquare)=>{// Disabled since we use tap-to-move now\nreturn false;};const onSquareClick=square=>{if(role!==turn){toast.error(\"It's not your turn\");return;}if(!selectedSquare){setSelectedSquare(square);onMouseOverSquare(square);// optional: highlight options\n}else{const move={from:selectedSquare,to:square,promotion:\"q\"};try{const result=chessRef.current.move(move);if(result){setFen(chessRef.current.fen());setTurn(chessRef.current.turn()===\"w\"?\"white\":\"black\");socketRef.current.emit(\"chessMove\",{roomId,move,by:role});checkGameStatus();}else{toast.error(\"Invalid move\");}}catch(e){toast.error(\"Invalid move\");}setSelectedSquare(null);setHighlightSquares({});}};const onMouseOverSquare=square=>{const moves=chessRef.current.moves({square,verbose:true});if(moves.length===0){setHighlightSquares({});return;}const highlights={};moves.forEach(m=>{highlights[m.to]={background:chessRef.current.get(m.to)!==null?\"rgba(255, 0, 0, 0.4)\":\"rgba(0, 255, 0, 0.3)\"};});highlights[square]={background:\"rgba(0, 0, 255, 0.3)\"};setHighlightSquares(highlights);};const onMouseOutSquare=()=>{setHighlightSquares({});};return/*#__PURE__*/_jsxs(\"div\",{className:\"room-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"room-title\",children:[\"Room: \",roomId]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chessboard-wrapper\",ref:containerRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-panel\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You are: \",/*#__PURE__*/_jsx(\"span\",{className:\"bold-text\",children:role||\"...\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Turn: \",/*#__PURE__*/_jsx(\"span\",{className:\"bold-text\",children:turn})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chessboard-container\",children:/*#__PURE__*/_jsx(Chessboard,{position:fen===\"start\"?undefined:fen,boardWidth:boardWidth,onSquareClick:onSquareClick,onMouseOverSquare:onMouseOverSquare,onMouseOutSquare:onMouseOutSquare,customSquareStyles:highlightSquares,boardOrientation:role===\"white\"?\"white\":\"black\",transitionDuration:300,draggable:false// 👈 Important: disable dragging\n})})]}),/*#__PURE__*/_jsx(Chat,{socket:socketRef.current,roomId:roomId,username:username})]})]});};export default Room;","map":{"version":3,"names":["Chessboard","React","useEffect","useState","useRef","useParams","useNavigate","io","Chat","Chess","toast","jsxs","_jsxs","jsx","_jsx","SOCKET_SERVER_URL","Room","roomId","navigate","username","localStorage","getItem","role","setRole","turn","setTurn","fen","setFen","highlightSquares","setHighlightSquares","boardWidth","setBoardWidth","selectedSquare","setSelectedSquare","socketRef","chessRef","containerRef","calculateBoardWidth","current","containerWidth","offsetWidth","padding","maxWidth","Math","min","max","window","addEventListener","removeEventListener","emit","on","assignedRole","newTurn","_ref","move","by","result","checkGameStatus","error","console","msg","disconnect","isCheckmate","success","concat","isStalemate","icon","isCheck","onPieceDrop","sourceSquare","targetSquare","onSquareClick","square","onMouseOverSquare","from","to","promotion","e","moves","verbose","length","highlights","forEach","m","background","get","onMouseOutSquare","className","children","ref","position","undefined","customSquareStyles","boardOrientation","transitionDuration","draggable","socket"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Room.js"],"sourcesContent":["import { Chessboard } from \"react-chessboard\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport Chat from \"./Chat\";\r\nimport { Chess } from \"chess.js\";\r\nimport \"./Room.css\";\r\nimport toast from \"react-hot-toast\";\r\n\r\n// const SOCKET_SERVER_URL = \"http://localhost:4000\";\r\nconst SOCKET_SERVER_URL = \"https://chess-multiplayer-rhci.onrender.com\";\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  const username = localStorage.getItem(\"username\") || \"\";\r\n  const [role, setRole] = useState(null);\r\n  const [turn, setTurn] = useState(\"white\");\r\n  const [fen, setFen] = useState(\"start\");\r\n  const [highlightSquares, setHighlightSquares] = useState({});\r\n  const [boardWidth, setBoardWidth] = useState(400);\r\n  const [selectedSquare, setSelectedSquare] = useState(null); // 👈 New state\r\n  const socketRef = useRef(null);\r\n  const chessRef = useRef(new Chess());\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const calculateBoardWidth = () => {\r\n      if (containerRef.current) {\r\n        const containerWidth = containerRef.current.offsetWidth;\r\n        const padding = 32;\r\n        const maxWidth = Math.min(containerWidth - padding, 400);\r\n        setBoardWidth(Math.max(maxWidth, 280));\r\n      }\r\n    };\r\n\r\n    calculateBoardWidth();\r\n    window.addEventListener(\"resize\", calculateBoardWidth);\r\n    return () => window.removeEventListener(\"resize\", calculateBoardWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    socketRef.current = io(SOCKET_SERVER_URL);\r\n    socketRef.current.emit(\"joinRoom\", { roomId, username });\r\n\r\n    socketRef.current.on(\"roleAssigned\", (assignedRole) => {\r\n      setRole(assignedRole);\r\n    });\r\n\r\n    socketRef.current.on(\"turnUpdate\", (newTurn) => {\r\n      setTurn(newTurn);\r\n    });\r\n\r\n    socketRef.current.on(\"chessMove\", ({ move, by }) => {\r\n      if (by !== role) {\r\n        try {\r\n          const result = chessRef.current.move(move);\r\n          if (result) {\r\n            setFen(chessRef.current.fen());\r\n            setTurn(chessRef.current.turn() === \"w\" ? \"white\" : \"black\");\r\n            checkGameStatus();\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error applying move:\", error, move);\r\n        }\r\n      }\r\n    });\r\n\r\n    socketRef.current.on(\"invalidMove\", (msg) => {\r\n      toast.error(msg);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId, navigate]);\r\n\r\n  const checkGameStatus = () => {\r\n    if (chessRef.current.isCheckmate()) {\r\n      toast.success(`Checkmate! ${turn === \"white\" ? \"Black\" : \"White\"} wins.`);\r\n    } else if (chessRef.current.isStalemate()) {\r\n      toast(\"Stalemate!\", { icon: \"🤝\" });\r\n    } else if (chessRef.current.isCheck()) {\r\n      toast(\"Check!\", { icon: \"⚠️\" });\r\n    }\r\n  };\r\n\r\n  const onPieceDrop = (sourceSquare, targetSquare) => {\r\n    // Disabled since we use tap-to-move now\r\n    return false;\r\n  };\r\n\r\n  const onSquareClick = (square) => {\r\n    if (role !== turn) {\r\n      toast.error(\"It's not your turn\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedSquare) {\r\n      setSelectedSquare(square);\r\n      onMouseOverSquare(square); // optional: highlight options\r\n    } else {\r\n      const move = {\r\n        from: selectedSquare,\r\n        to: square,\r\n        promotion: \"q\",\r\n      };\r\n\r\n      try {\r\n        const result = chessRef.current.move(move);\r\n        if (result) {\r\n          setFen(chessRef.current.fen());\r\n          setTurn(chessRef.current.turn() === \"w\" ? \"white\" : \"black\");\r\n          socketRef.current.emit(\"chessMove\", { roomId, move, by: role });\r\n          checkGameStatus();\r\n        } else {\r\n          toast.error(\"Invalid move\");\r\n        }\r\n      } catch (e) {\r\n        toast.error(\"Invalid move\");\r\n      }\r\n\r\n      setSelectedSquare(null);\r\n      setHighlightSquares({});\r\n    }\r\n  };\r\n\r\n  const onMouseOverSquare = (square) => {\r\n    const moves = chessRef.current.moves({ square, verbose: true });\r\n    if (moves.length === 0) {\r\n      setHighlightSquares({});\r\n      return;\r\n    }\r\n\r\n    const highlights = {};\r\n    moves.forEach((m) => {\r\n      highlights[m.to] = {\r\n        background:\r\n          chessRef.current.get(m.to) !== null\r\n            ? \"rgba(255, 0, 0, 0.4)\"\r\n            : \"rgba(0, 255, 0, 0.3)\",\r\n      };\r\n    });\r\n    highlights[square] = { background: \"rgba(0, 0, 255, 0.3)\" };\r\n    setHighlightSquares(highlights);\r\n  };\r\n\r\n  const onMouseOutSquare = () => {\r\n    setHighlightSquares({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n      <div className=\"room-content\">\r\n        <div className=\"chessboard-wrapper\" ref={containerRef}>\r\n          <div className=\"info-panel\">\r\n            <p>\r\n              You are: <span className=\"bold-text\">{role || \"...\"}</span>\r\n            </p>\r\n            <p>\r\n              Turn: <span className=\"bold-text\">{turn}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"chessboard-container\">\r\n            <Chessboard\r\n              position={fen === \"start\" ? undefined : fen}\r\n              boardWidth={boardWidth}\r\n              onSquareClick={onSquareClick}\r\n              onMouseOverSquare={onMouseOverSquare}\r\n              onMouseOutSquare={onMouseOutSquare}\r\n              customSquareStyles={highlightSquares}\r\n              boardOrientation={role === \"white\" ? \"white\" : \"black\"}\r\n              transitionDuration={300}\r\n              draggable={false} // 👈 Important: disable dragging\r\n            />\r\n          </div>\r\n        </div>\r\n        <Chat socket={socketRef.current} roomId={roomId} username={username} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}