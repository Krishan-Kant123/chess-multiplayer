{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishan kant\\\\Desktop\\\\Js\\\\game\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./Chat.css\";\n\n// const Chat = ({ socket, roomId, username }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!socket) return;\n\n//     const handleNewMessage = (message) => {\n//       setMessages((prev) => [...prev, message]);\n//     };\n\n//     socket.on(\"chatMessage\", handleNewMessage);\n\n//     return () => {\n//       socket.off(\"chatMessage\", handleNewMessage);\n//     };\n//   }, [socket]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   }, [messages]);\n\n//   const sendMessage = () => {\n//     if (input.trim() === \"\") return;\n\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\n//     setInput(\"\");\n//   };\n\n//   const handleKeyDown = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       sendMessage();\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <h3 className=\"chat-header\">Chat</h3>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div\n//             key={idx}\n//             className={`chat-message ${\n//               msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"\n//             }`}\n//           >\n//             <strong>{msg.username}: </strong>\n//             <span>{msg.message}</span>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <textarea\n//         rows={2}\n//         value={input}\n//         onChange={(e) => setInput(e.target.value)}\n//         onKeyDown={handleKeyDown}\n//         placeholder=\"Type a message...\"\n//         className=\"chat-input\"\n//       />\n//       <button onClick={sendMessage} className=\"chat-send-button\">\n//         Send\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  socket,\n  roomId,\n  username\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!socket) return;\n    const handleNewMessage = message => {\n      setMessages(prev => [...prev, message]);\n    };\n    socket.on(\"chatMessage\", handleNewMessage);\n    return () => {\n      socket.off(\"chatMessage\", handleNewMessage);\n    };\n  }, [socket]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = () => {\n    if (input.trim() === \"\") return;\n    socket.emit(\"chatMessage\", {\n      roomId,\n      username,\n      message: input.trim()\n    });\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chat-header\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, idx) => {\n        const isOwnMessage = msg.username === username;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [!isOwnMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-username\",\n              children: msg.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 2,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type a message...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"chat-send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"ABrHAQDP7g0qYpnOwslR1WwKacs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","socket","roomId","username","_s","messages","setMessages","input","setInput","messagesEndRef","handleNewMessage","message","prev","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","emit","handleKeyDown","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","isOwnMessage","ref","rows","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Chat.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\n// import \"./Chat.css\";\r\n\r\n\r\n// const Chat = ({ socket, roomId, username }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [input, setInput] = useState(\"\");\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     if (!socket) return;\r\n\r\n//     const handleNewMessage = (message) => {\r\n//       setMessages((prev) => [...prev, message]);\r\n//     };\r\n\r\n//     socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n//     return () => {\r\n//       socket.off(\"chatMessage\", handleNewMessage);\r\n//     };\r\n//   }, [socket]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   }, [messages]);\r\n\r\n//   const sendMessage = () => {\r\n//     if (input.trim() === \"\") return;\r\n\r\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n//     setInput(\"\");\r\n//   };\r\n\r\n//   const handleKeyDown = (e) => {\r\n//     if (e.key === \"Enter\" && !e.shiftKey) {\r\n//       e.preventDefault();\r\n//       sendMessage();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chat-container\">\r\n//       <h3 className=\"chat-header\">Chat</h3>\r\n//       <div className=\"chat-messages\">\r\n//         {messages.map((msg, idx) => (\r\n//           <div\r\n//             key={idx}\r\n//             className={`chat-message ${\r\n//               msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"\r\n//             }`}\r\n//           >\r\n//             <strong>{msg.username}: </strong>\r\n//             <span>{msg.message}</span>\r\n//           </div>\r\n//         ))}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n//       <textarea\r\n//         rows={2}\r\n//         value={input}\r\n//         onChange={(e) => setInput(e.target.value)}\r\n//         onKeyDown={handleKeyDown}\r\n//         placeholder=\"Type a message...\"\r\n//         className=\"chat-input\"\r\n//       />\r\n//       <button onClick={sendMessage} className=\"chat-send-button\">\r\n//         Send\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = ({ socket, roomId, username }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleNewMessage = (message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    };\r\n\r\n    socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n    return () => {\r\n      socket.off(\"chatMessage\", handleNewMessage);\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h3 className=\"chat-header\">Chat</h3>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, idx) => {\r\n          const isOwnMessage = msg.username === username;\r\n          return (\r\n            <div\r\n              key={idx}\r\n              className={`message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`}\r\n            >\r\n              <div className=\"message-bubble\">\r\n                {!isOwnMessage && (\r\n                  <div className=\"message-username\">{msg.username}</div>\r\n                )}\r\n                <div className=\"message-text\">{msg.message}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"chat-input-container\">\r\n        <textarea\r\n          rows={2}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Type a message...\"\r\n          className=\"chat-input\"\r\n        />\r\n        <button onClick={sendMessage} className=\"chat-send-button\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}