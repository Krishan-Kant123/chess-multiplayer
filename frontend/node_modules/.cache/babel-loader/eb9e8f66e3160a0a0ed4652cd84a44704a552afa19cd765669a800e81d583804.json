{"ast":null,"code":"import { rooms } from '../controllers/room.controller.js';\nexport default function registerSyncHandlers(io, socket) {\n  socket.on('join-room', ({\n    roomId,\n    username\n  }) => {\n    socket.join(roomId);\n    if (!rooms[roomId]) return;\n    if (!rooms[roomId].users.includes(username)) {\n      rooms[roomId].users.push(username);\n    }\n    const room = rooms[roomId];\n    const position = room.isPlaying ? (Date.now() - room.startTime) / 1000 : room.pausedAt || 0;\n    socket.emit('sync-playback', {\n      videoId: room.queue[room.currentIndex],\n      queue: room.queue.slice(room.currentIndex + 1),\n      isPlaying: room.isPlaying,\n      position\n    });\n  });\n  socket.on('play', ({\n    roomId\n  }) => {\n    const room = rooms[roomId];\n    if (!room) return;\n    room.isPlaying = true;\n    room.startTime = Date.now();\n    io.to(roomId).emit('play');\n  });\n  socket.on('pause', ({\n    roomId,\n    position\n  }) => {\n    const room = rooms[roomId];\n    if (!room) return;\n    room.isPlaying = false;\n    room.pausedAt = position;\n    room.startTime = Date.now() - position * 1000;\n    io.to(roomId).emit('pause', {\n      position\n    });\n  });\n  socket.on('seek', ({\n    roomId,\n    position\n  }) => {\n    const room = rooms[roomId];\n    if (!room) return;\n    room.startTime = Date.now() - position * 1000;\n    room.pausedAt = position;\n    io.to(roomId).emit('seek', {\n      position\n    });\n  });\n  socket.on('add-video', ({\n    roomId,\n    videoId\n  }) => {\n    const room = rooms[roomId];\n    if (!room) return;\n    room.queue.push(videoId);\n\n    // If no video is playing, start this one\n    if (!room.isPlaying && room.queue.length === 1) {\n      room.currentIndex = 0;\n      room.startTime = Date.now();\n      room.isPlaying = false;\n      io.to(roomId).emit('sync-playback', {\n        videoId,\n        queue: room.queue.slice(1),\n        isPlaying: false,\n        position: 0\n      });\n    } else {\n      io.to(roomId).emit('update-queue', room.queue.slice(room.currentIndex + 1));\n    }\n  });\n  socket.on('next-video', ({\n    roomId\n  }) => {\n    const room = rooms[roomId];\n    if (!room) return;\n    if (room.currentIndex + 1 < room.queue.length) {\n      room.currentIndex += 1;\n      room.startTime = Date.now();\n      room.isPlaying = true;\n      room.pausedAt = 0;\n      const videoId = room.queue[room.currentIndex];\n      const remainingQueue = room.queue.slice(room.currentIndex + 1);\n      io.to(roomId).emit('sync-playback', {\n        videoId,\n        queue: remainingQueue,\n        isPlaying: true,\n        position: 0\n      });\n    } else {\n      // End of queue\n      room.isPlaying = false;\n      room.startTime = null;\n      room.pausedAt = 0;\n      io.to(roomId).emit('sync-playback', {\n        videoId: null,\n        queue: [],\n        isPlaying: false,\n        position: 0\n      });\n    }\n  });\n  socket.on('chat-message', ({\n    roomId,\n    username,\n    message\n  }) => {\n    io.to(roomId).emit('chat-message', {\n      username,\n      message\n    });\n  });\n}","map":{"version":3,"names":["rooms","registerSyncHandlers","io","socket","on","roomId","username","join","users","includes","push","room","position","isPlaying","Date","now","startTime","pausedAt","emit","videoId","queue","currentIndex","slice","to","length","remainingQueue","message"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Room.js"],"sourcesContent":["import { rooms } from '../controllers/room.controller.js';\r\n\r\nexport default function registerSyncHandlers(io, socket) {\r\n  socket.on('join-room', ({ roomId, username }) => {\r\n    socket.join(roomId);\r\n\r\n    if (!rooms[roomId]) return;\r\n\r\n    if (!rooms[roomId].users.includes(username)) {\r\n      rooms[roomId].users.push(username);\r\n    }\r\n\r\n    const room = rooms[roomId];\r\n    const position = room.isPlaying\r\n      ? (Date.now() - room.startTime) / 1000\r\n      : room.pausedAt || 0;\r\n\r\n    socket.emit('sync-playback', {\r\n      videoId: room.queue[room.currentIndex],\r\n      queue: room.queue.slice(room.currentIndex + 1),\r\n      isPlaying: room.isPlaying,\r\n      position,\r\n    });\r\n  });\r\n\r\n  socket.on('play', ({ roomId }) => {\r\n    const room = rooms[roomId];\r\n    if (!room) return;\r\n    room.isPlaying = true;\r\n    room.startTime = Date.now();\r\n\r\n    io.to(roomId).emit('play');\r\n  });\r\n\r\n  socket.on('pause', ({ roomId, position }) => {\r\n    const room = rooms[roomId];\r\n    if (!room) return;\r\n    room.isPlaying = false;\r\n    room.pausedAt = position;\r\n    room.startTime = Date.now() - position * 1000;\r\n\r\n    io.to(roomId).emit('pause', { position });\r\n  });\r\n\r\n  socket.on('seek', ({ roomId, position }) => {\r\n    const room = rooms[roomId];\r\n    if (!room) return;\r\n    room.startTime = Date.now() - position * 1000;\r\n    room.pausedAt = position;\r\n\r\n    io.to(roomId).emit('seek', { position });\r\n  });\r\n\r\n  socket.on('add-video', ({ roomId, videoId }) => {\r\n    const room = rooms[roomId];\r\n    if (!room) return;\r\n\r\n    room.queue.push(videoId);\r\n\r\n    // If no video is playing, start this one\r\n    if (!room.isPlaying && room.queue.length === 1) {\r\n      room.currentIndex = 0;\r\n      room.startTime = Date.now();\r\n      room.isPlaying = false;\r\n\r\n      io.to(roomId).emit('sync-playback', {\r\n        videoId,\r\n        queue: room.queue.slice(1),\r\n        isPlaying: false,\r\n        position: 0,\r\n      });\r\n    } else {\r\n      io.to(roomId).emit('update-queue', room.queue.slice(room.currentIndex + 1));\r\n    }\r\n  });\r\n\r\n  socket.on('next-video', ({ roomId }) => {\r\n    const room = rooms[roomId];\r\n    if (!room) return;\r\n\r\n    if (room.currentIndex + 1 < room.queue.length) {\r\n      room.currentIndex += 1;\r\n      room.startTime = Date.now();\r\n      room.isPlaying = true;\r\n      room.pausedAt = 0;\r\n\r\n      const videoId = room.queue[room.currentIndex];\r\n      const remainingQueue = room.queue.slice(room.currentIndex + 1);\r\n\r\n      io.to(roomId).emit('sync-playback', {\r\n        videoId,\r\n        queue: remainingQueue,\r\n        isPlaying: true,\r\n        position: 0,\r\n      });\r\n    } else {\r\n      // End of queue\r\n      room.isPlaying = false;\r\n      room.startTime = null;\r\n      room.pausedAt = 0;\r\n\r\n      io.to(roomId).emit('sync-playback', {\r\n        videoId: null,\r\n        queue: [],\r\n        isPlaying: false,\r\n        position: 0,\r\n      });\r\n    }\r\n  });\r\n\r\n  socket.on('chat-message', ({ roomId, username, message }) => {\r\n    io.to(roomId).emit('chat-message', { username, message });\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}