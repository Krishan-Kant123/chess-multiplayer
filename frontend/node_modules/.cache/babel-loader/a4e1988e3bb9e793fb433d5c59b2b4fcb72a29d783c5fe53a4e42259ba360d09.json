{"ast":null,"code":"// @generated by Peggy 4.2.0.\n//\n// https://peggyjs.org/\n\n\"use strict\";\n\nfunction rootNode(comment) {\n  return comment !== null ? {\n    comment,\n    variations: []\n  } : {\n    variations: []\n  };\n}\nfunction node(move, suffix, nag, comment, variations) {\n  const node = {\n    move,\n    variations\n  };\n  if (suffix) {\n    node.suffix = suffix;\n  }\n  if (nag) {\n    node.nag = nag;\n  }\n  if (comment !== null) {\n    node.comment = comment;\n  }\n  return node;\n}\nfunction lineToTree() {\n  for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n    nodes[_key] = arguments[_key];\n  }\n  const [root, ...rest] = nodes;\n  let parent = root;\n  for (const child of rest) {\n    if (child !== null) {\n      parent.variations = [child, ...child.variations];\n      child.variations = [];\n      parent = child;\n    }\n  }\n  return root;\n}\nfunction pgn(headers, game) {\n  var _ref;\n  if (game.marker && game.marker.comment) {\n    let node = game.root;\n    while (true) {\n      const next = node.variations[0];\n      if (!next) {\n        node.comment = game.marker.comment;\n        break;\n      }\n      node = next;\n    }\n  }\n  return {\n    headers,\n    root: game.root,\n    result: (_ref = game.marker && game.marker.result) !== null && _ref !== void 0 ? _ref : undefined\n  };\n}\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\npeg$subclass(peg$SyntaxError, Error);\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) {\n    return str;\n  }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\npeg$SyntaxError.prototype.format = function (sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = this.location.source && typeof this.location.source.offset === \"function\" ? this.location.source.offset(s) : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = last - s.column || 1;\n      str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + offset_s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ') + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n    class: function (expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n      });\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n    any: function () {\n      return \"any character\";\n    },\n    end: function () {\n      return \"end of input\";\n    },\n    other: function (expectation) {\n      return expectation.description;\n    }\n  };\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n  function classEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n    descriptions.sort();\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n      default:\n        return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n    }\n  }\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n  var peg$startRuleFunctions = {\n    pgn: peg$parsepgn\n  };\n  var peg$startRuleFunction = peg$parsepgn;\n  var peg$c0 = \"[\";\n  var peg$c1 = \"\\\"\";\n  var peg$c2 = \"]\";\n  var peg$c3 = \".\";\n  var peg$c4 = \"O-O-O\";\n  var peg$c5 = \"O-O\";\n  var peg$c6 = \"0-0-0\";\n  var peg$c7 = \"0-0\";\n  var peg$c8 = \"$\";\n  var peg$c9 = \"{\";\n  var peg$c10 = \"}\";\n  var peg$c11 = \";\";\n  var peg$c12 = \"(\";\n  var peg$c13 = \")\";\n  var peg$c14 = \"1-0\";\n  var peg$c15 = \"0-1\";\n  var peg$c16 = \"1/2-1/2\";\n  var peg$c17 = \"*\";\n  var peg$r0 = /^[a-zA-Z]/;\n  var peg$r1 = /^[^\"]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[.]/;\n  var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n  var peg$r5 = /^[+#]/;\n  var peg$r6 = /^[!?]/;\n  var peg$r7 = /^[^}]/;\n  var peg$r8 = /^[^\\r\\n]/;\n  var peg$r9 = /^[ \\t\\r\\n]/;\n  var peg$e0 = peg$otherExpectation(\"tag pair\");\n  var peg$e1 = peg$literalExpectation(\"[\", false);\n  var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e3 = peg$literalExpectation(\"]\", false);\n  var peg$e4 = peg$otherExpectation(\"tag name\");\n  var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n  var peg$e6 = peg$otherExpectation(\"tag value\");\n  var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e8 = peg$otherExpectation(\"move number\");\n  var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\".\"], false, false);\n  var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n  var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n  var peg$e14 = peg$literalExpectation(\"O-O\", false);\n  var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n  var peg$e16 = peg$literalExpectation(\"0-0\", false);\n  var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n  var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n  var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n  var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n  var peg$e21 = peg$otherExpectation(\"NAG\");\n  var peg$e22 = peg$literalExpectation(\"$\", false);\n  var peg$e23 = peg$otherExpectation(\"brace comment\");\n  var peg$e24 = peg$literalExpectation(\"{\", false);\n  var peg$e25 = peg$classExpectation([\"}\"], true, false);\n  var peg$e26 = peg$literalExpectation(\"}\", false);\n  var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n  var peg$e28 = peg$literalExpectation(\";\", false);\n  var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n  var peg$e30 = peg$otherExpectation(\"variation\");\n  var peg$e31 = peg$literalExpectation(\"(\", false);\n  var peg$e32 = peg$literalExpectation(\")\", false);\n  var peg$e33 = peg$otherExpectation(\"game termination marker\");\n  var peg$e34 = peg$literalExpectation(\"1-0\", false);\n  var peg$e35 = peg$literalExpectation(\"0-1\", false);\n  var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n  var peg$e37 = peg$literalExpectation(\"*\", false);\n  var peg$e38 = peg$otherExpectation(\"whitespace\");\n  var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n  var peg$f0 = function (headers, game) {\n    return pgn(headers, game);\n  };\n  var peg$f1 = function (tagPairs) {\n    return Object.fromEntries(tagPairs);\n  };\n  var peg$f2 = function (tagName, tagValue) {\n    return [tagName, tagValue];\n  };\n  var peg$f3 = function (root, marker) {\n    return {\n      root,\n      marker\n    };\n  };\n  var peg$f4 = function (comment, moves) {\n    return lineToTree(rootNode(comment), ...moves.flat());\n  };\n  var peg$f5 = function (san, suffix, nag, comment, variations) {\n    return node(san, suffix, nag, comment, variations);\n  };\n  var peg$f6 = function (nag) {\n    return nag;\n  };\n  var peg$f7 = function (comment) {\n    return comment.replace(/[\\r\\n]+/g, \" \");\n  };\n  var peg$f8 = function (comment) {\n    return comment.trim();\n  };\n  var peg$f9 = function (line) {\n    return line;\n  };\n  var peg$f10 = function (result, comment) {\n    return {\n      result,\n      comment\n    };\n  };\n  var peg$currPos = options.peg$currPos | 0;\n  var peg$savedPos = peg$currPos;\n  var peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }];\n  var peg$maxFailPos = peg$currPos;\n  var peg$maxFailExpected = options.peg$maxFailExpected || [];\n  var peg$silentFails = options.peg$silentFails | 0;\n  var peg$result;\n  if (options.startRule) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n  function offset() {\n    return peg$savedPos;\n  }\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n  function expected(description, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n  function error(message, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$anyExpectation() {\n    return {\n      type: \"any\"\n    };\n  }\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n    if (details) {\n      return details;\n    } else {\n      if (pos >= peg$posDetailsCache.length) {\n        p = peg$posDetailsCache.length - 1;\n      } else {\n        p = pos;\n        while (!peg$posDetailsCache[--p]) {}\n      }\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n        p++;\n      }\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && typeof peg$source.offset === \"function\") {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n    peg$maxFailExpected.push(expected);\n  }\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n  function peg$parsepgn() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parsetagPairSection();\n    s2 = peg$parsemoveTextSection();\n    peg$savedPos = s0;\n    s0 = peg$f0(s1, s2);\n    return s0;\n  }\n  function peg$parsetagPairSection() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsetagPair();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsetagPair();\n    }\n    s2 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f1(s1);\n    return s0;\n  }\n  function peg$parsetagPair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c0;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e1);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsetagName();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e2);\n          }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsetagValue();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s8 = peg$c1;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parse_();\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s10 = peg$c2;\n              peg$currPos++;\n            } else {\n              s10 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e3);\n              }\n            }\n            if (s10 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f2(s4, s7);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e0);\n      }\n    }\n    return s0;\n  }\n  function peg$parsetagName() {\n    var s0, s1, s2;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r0.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e5);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r0.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e4);\n      }\n    }\n    return s0;\n  }\n  function peg$parsetagValue() {\n    var s0, s1, s2;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r1.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e7);\n        }\n      }\n    }\n    s0 = input.substring(s0, peg$currPos);\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e6);\n    }\n    return s0;\n  }\n  function peg$parsemoveTextSection() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parseline();\n    s2 = peg$parse_();\n    s3 = peg$parsegameTerminationMarker();\n    if (s3 === peg$FAILED) {\n      s3 = null;\n    }\n    s4 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f3(s1, s3);\n    return s0;\n  }\n  function peg$parseline() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsecomment();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = [];\n    s3 = peg$parsemove();\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      s3 = peg$parsemove();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f4(s1, s2);\n    return s0;\n  }\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parsemoveNumber();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parse_();\n    s4 = peg$parsesan();\n    if (s4 !== peg$FAILED) {\n      s5 = peg$parsesuffixAnnotation();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = [];\n      s7 = peg$parsenag();\n      while (s7 !== peg$FAILED) {\n        s6.push(s7);\n        s7 = peg$parsenag();\n      }\n      s7 = peg$parse_();\n      s8 = peg$parsecomment();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      s9 = [];\n      s10 = peg$parsevariation();\n      while (s10 !== peg$FAILED) {\n        s9.push(s10);\n        s10 = peg$parsevariation();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f5(s4, s5, s6, s8, s9);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsemoveNumber() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r2.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e9);\n      }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e9);\n        }\n      }\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c3;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e10);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r3.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e11);\n        }\n      }\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e11);\n          }\n        }\n      }\n      s1 = [s1, s2, s3, s4];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n    return s0;\n  }\n  function peg$parsesan() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s2 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e13);\n      }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c5) {\n        s2 = peg$c5;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e14);\n        }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c6) {\n          s2 = peg$c6;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e15);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c7) {\n            s2 = peg$c7;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e16);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = input.charAt(peg$currPos);\n            if (peg$r0.test(s3)) {\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e5);\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = input.charAt(peg$currPos);\n              if (peg$r4.test(s5)) {\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e17);\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = input.charAt(peg$currPos);\n                  if (peg$r4.test(s5)) {\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$e17);\n                    }\n                  }\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = input.charAt(peg$currPos);\n      if (peg$r5.test(s3)) {\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e18);\n        }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e12);\n      }\n    }\n    return s0;\n  }\n  function peg$parsesuffixAnnotation() {\n    var s0, s1, s2;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r6.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e20);\n      }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (s1.length >= 2) {\n        s2 = peg$FAILED;\n      } else {\n        s2 = input.charAt(peg$currPos);\n        if (peg$r6.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e20);\n          }\n        }\n      }\n    }\n    if (s1.length < 1) {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e19);\n      }\n    }\n    return s0;\n  }\n  function peg$parsenag() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c8;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e22);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r2.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e9);\n        }\n      }\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r2.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e9);\n            }\n          }\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = input.substring(s3, peg$currPos);\n      } else {\n        s3 = s4;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f6(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e21);\n      }\n    }\n    return s0;\n  }\n  function peg$parsecomment() {\n    var s0;\n    s0 = peg$parsebraceComment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserestOfLineComment();\n    }\n    return s0;\n  }\n  function peg$parsebraceComment() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c9;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e24);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r7.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e25);\n        }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e25);\n          }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s3 = peg$c10;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e26);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e23);\n      }\n    }\n    return s0;\n  }\n  function peg$parserestOfLineComment() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e28);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r8.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e29);\n        }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e29);\n          }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      peg$savedPos = s0;\n      s0 = peg$f8(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e27);\n      }\n    }\n    return s0;\n  }\n  function peg$parsevariation() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c12;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e31);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseline();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c13;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e32);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f9(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e30);\n      }\n    }\n    return s0;\n  }\n  function peg$parsegameTerminationMarker() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c14) {\n      s1 = peg$c14;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e34);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e35);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c16) {\n          s1 = peg$c16;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e36);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s1 = peg$c17;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e37);\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parsecomment();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f10(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e33);\n      }\n    }\n    return s0;\n  }\n  function peg$parse_() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r9.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e39);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e39);\n        }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e38);\n    }\n    return s0;\n  }\n  peg$result = peg$startRuleFunction();\n  if (options.peg$library) {\n    return /** @type {any} */{\n      peg$result,\n      peg$currPos,\n      peg$FAILED,\n      peg$maxFailExpected,\n      peg$maxFailPos\n    };\n  }\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\nmodule.exports = {\n  StartRules: [\"pgn\"],\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};","map":{"version":3,"names":["rootNode","comment","variations","node","move","suffix","nag","lineToTree","_len","arguments","length","nodes","Array","_key","root","rest","parent","child","pgn","headers","game","_ref","marker","next","result","undefined","peg$subclass","C","constructor","prototype","peg$SyntaxError","message","expected","found","location","self","Error","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","repeat","slice","format","sources","src","k","source","text","split","s","start","offset_s","offset","loc","line","column","e","end","filler","toString","last","hatLen","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","map","part","isArray","classEscape","inverted","join","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","type","describeExpected","descriptions","i","j","sort","describeFound","peg$parse","input","options","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","peg$parsepgn","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$r6","peg$r7","peg$r8","peg$r9","peg$e0","peg$otherExpectation","peg$e1","peg$literalExpectation","peg$e2","peg$e3","peg$e4","peg$e5","peg$classExpectation","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$f0","peg$f1","tagPairs","fromEntries","peg$f2","tagName","tagValue","peg$f3","peg$f4","moves","flat","peg$f5","san","peg$f6","peg$f7","peg$f8","trim","peg$f9","peg$f10","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","range","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","res","peg$fail","push","s0","s1","s2","peg$parsetagPairSection","peg$parsemoveTextSection","peg$parsetagPair","peg$parse_","s3","s4","s5","s6","s7","s8","s9","s10","peg$parsetagName","peg$parsetagValue","charAt","test","peg$parseline","peg$parsegameTerminationMarker","peg$parsecomment","peg$parsemove","peg$parsemoveNumber","peg$parsesan","peg$parsesuffixAnnotation","peg$parsenag","peg$parsevariation","substr","peg$parsebraceComment","peg$parserestOfLineComment","peg$library","module","exports","StartRules","SyntaxError","parse"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/node_modules/chess.js/dist/esm/pgn.js"],"sourcesContent":["// @generated by Peggy 4.2.0.\n//\n// https://peggyjs.org/\n\n\"use strict\";\n\n\n\n  function rootNode(comment) {\n  \treturn comment !== null ? { comment, variations: [] } : { variations: []}\n  }\n\n  function node(move, suffix, nag, comment, variations) {\n  \tconst node = { move, variations }\n\n    if (suffix) {\n    \tnode.suffix = suffix\n    }\n\n    if (nag) {\n    \tnode.nag = nag\n    }\n\n    if (comment !== null) {\n    \tnode.comment = comment\n    }\n\n    return node\n  }\n\n  function lineToTree(...nodes) {\n  \tconst [root, ...rest] = nodes;\n\n    let parent = root\n\n    for (const child of rest) {\n    \tif (child !== null) {\n        \tparent.variations = [child, ...child.variations]\n            child.variations = []\n            parent = child\n        }\n    }\n\n  \treturn root\n  }\n\n  function pgn(headers, game) {\n  \tif (game.marker && game.marker.comment) {\n    \tlet node = game.root\n        while (true) {\n        \tconst next = node.variations[0]\n            if (!next) {\n            \tnode.comment = game.marker.comment\n            \tbreak\n            }\n            node = next\n        }\n    }\n\n  \treturn {\n    \theaders,\n        root: game.root,\n        result: (game.marker && game.marker.result) ?? undefined\n    }\n  }\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { pgn: peg$parsepgn };\n  var peg$startRuleFunction = peg$parsepgn;\n\n  var peg$c0 = \"[\";\n  var peg$c1 = \"\\\"\";\n  var peg$c2 = \"]\";\n  var peg$c3 = \".\";\n  var peg$c4 = \"O-O-O\";\n  var peg$c5 = \"O-O\";\n  var peg$c6 = \"0-0-0\";\n  var peg$c7 = \"0-0\";\n  var peg$c8 = \"$\";\n  var peg$c9 = \"{\";\n  var peg$c10 = \"}\";\n  var peg$c11 = \";\";\n  var peg$c12 = \"(\";\n  var peg$c13 = \")\";\n  var peg$c14 = \"1-0\";\n  var peg$c15 = \"0-1\";\n  var peg$c16 = \"1/2-1/2\";\n  var peg$c17 = \"*\";\n\n  var peg$r0 = /^[a-zA-Z]/;\n  var peg$r1 = /^[^\"]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[.]/;\n  var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n  var peg$r5 = /^[+#]/;\n  var peg$r6 = /^[!?]/;\n  var peg$r7 = /^[^}]/;\n  var peg$r8 = /^[^\\r\\n]/;\n  var peg$r9 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$otherExpectation(\"tag pair\");\n  var peg$e1 = peg$literalExpectation(\"[\", false);\n  var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e3 = peg$literalExpectation(\"]\", false);\n  var peg$e4 = peg$otherExpectation(\"tag name\");\n  var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n  var peg$e6 = peg$otherExpectation(\"tag value\");\n  var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e8 = peg$otherExpectation(\"move number\");\n  var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\".\"], false, false);\n  var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n  var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n  var peg$e14 = peg$literalExpectation(\"O-O\", false);\n  var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n  var peg$e16 = peg$literalExpectation(\"0-0\", false);\n  var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n  var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n  var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n  var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n  var peg$e21 = peg$otherExpectation(\"NAG\");\n  var peg$e22 = peg$literalExpectation(\"$\", false);\n  var peg$e23 = peg$otherExpectation(\"brace comment\");\n  var peg$e24 = peg$literalExpectation(\"{\", false);\n  var peg$e25 = peg$classExpectation([\"}\"], true, false);\n  var peg$e26 = peg$literalExpectation(\"}\", false);\n  var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n  var peg$e28 = peg$literalExpectation(\";\", false);\n  var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n  var peg$e30 = peg$otherExpectation(\"variation\");\n  var peg$e31 = peg$literalExpectation(\"(\", false);\n  var peg$e32 = peg$literalExpectation(\")\", false);\n  var peg$e33 = peg$otherExpectation(\"game termination marker\");\n  var peg$e34 = peg$literalExpectation(\"1-0\", false);\n  var peg$e35 = peg$literalExpectation(\"0-1\", false);\n  var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n  var peg$e37 = peg$literalExpectation(\"*\", false);\n  var peg$e38 = peg$otherExpectation(\"whitespace\");\n  var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(headers, game) { return pgn(headers, game) };\n  var peg$f1 = function(tagPairs) { return Object.fromEntries(tagPairs) };\n  var peg$f2 = function(tagName, tagValue) { return [tagName, tagValue] };\n  var peg$f3 = function(root, marker) { return { root, marker} };\n  var peg$f4 = function(comment, moves) { return lineToTree(rootNode(comment), ...moves.flat()) };\n  var peg$f5 = function(san, suffix, nag, comment, variations) { return node(san, suffix, nag, comment, variations) };\n  var peg$f6 = function(nag) { return nag };\n  var peg$f7 = function(comment) { return comment.replace(/[\\r\\n]+/g, \" \") };\n  var peg$f8 = function(comment) { return comment.trim() };\n  var peg$f9 = function(line) { return line };\n  var peg$f10 = function(result, comment) { return { result, comment } };\n  var peg$currPos = options.peg$currPos | 0;\n  var peg$savedPos = peg$currPos;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = peg$currPos;\n  var peg$maxFailExpected = options.peg$maxFailExpected || [];\n  var peg$silentFails = options.peg$silentFails | 0;\n\n  var peg$result;\n\n  if (options.startRule) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      if (pos >= peg$posDetailsCache.length) {\n        p = peg$posDetailsCache.length - 1;\n      } else {\n        p = pos;\n        while (!peg$posDetailsCache[--p]) {}\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepgn() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetagPairSection();\n    s2 = peg$parsemoveTextSection();\n    peg$savedPos = s0;\n    s0 = peg$f0(s1, s2);\n\n    return s0;\n  }\n\n  function peg$parsetagPairSection() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsetagPair();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsetagPair();\n    }\n    s2 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f1(s1);\n\n    return s0;\n  }\n\n  function peg$parsetagPair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c0;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsetagName();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e2); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsetagValue();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s8 = peg$c1;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parse_();\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s10 = peg$c2;\n              peg$currPos++;\n            } else {\n              s10 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e3); }\n            }\n            if (s10 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f2(s4, s7);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagName() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r0.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r0.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e5); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagValue() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r1.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e7); }\n      }\n    }\n    s0 = input.substring(s0, peg$currPos);\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e6); }\n\n    return s0;\n  }\n\n  function peg$parsemoveTextSection() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseline();\n    s2 = peg$parse_();\n    s3 = peg$parsegameTerminationMarker();\n    if (s3 === peg$FAILED) {\n      s3 = null;\n    }\n    s4 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f3(s1, s3);\n\n    return s0;\n  }\n\n  function peg$parseline() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecomment();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = [];\n    s3 = peg$parsemove();\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      s3 = peg$parsemove();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f4(s1, s2);\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parsemoveNumber();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parse_();\n    s4 = peg$parsesan();\n    if (s4 !== peg$FAILED) {\n      s5 = peg$parsesuffixAnnotation();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = [];\n      s7 = peg$parsenag();\n      while (s7 !== peg$FAILED) {\n        s6.push(s7);\n        s7 = peg$parsenag();\n      }\n      s7 = peg$parse_();\n      s8 = peg$parsecomment();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      s9 = [];\n      s10 = peg$parsevariation();\n      while (s10 !== peg$FAILED) {\n        s9.push(s10);\n        s10 = peg$parsevariation();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f5(s4, s5, s6, s8, s9);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveNumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r2.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c3;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r3.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e11); }\n      }\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e11); }\n        }\n      }\n      s1 = [s1, s2, s3, s4];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesan() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s2 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c5) {\n        s2 = peg$c5;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e14); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c6) {\n          s2 = peg$c6;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e15); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c7) {\n            s2 = peg$c7;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e16); }\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = input.charAt(peg$currPos);\n            if (peg$r0.test(s3)) {\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e5); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = input.charAt(peg$currPos);\n              if (peg$r4.test(s5)) {\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e17); }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = input.charAt(peg$currPos);\n                  if (peg$r4.test(s5)) {\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$e17); }\n                  }\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = input.charAt(peg$currPos);\n      if (peg$r5.test(s3)) {\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e18); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesuffixAnnotation() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r6.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (s1.length >= 2) {\n        s2 = peg$FAILED;\n      } else {\n        s2 = input.charAt(peg$currPos);\n        if (peg$r6.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e20); }\n        }\n      }\n    }\n    if (s1.length < 1) {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c8;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e22); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r2.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r2.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e9); }\n          }\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = input.substring(s3, peg$currPos);\n      } else {\n        s3 = s4;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f6(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0;\n\n    s0 = peg$parsebraceComment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserestOfLineComment();\n    }\n\n    return s0;\n  }\n\n  function peg$parsebraceComment() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c9;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r7.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e25); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e25); }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s3 = peg$c10;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e26); }\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserestOfLineComment() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e28); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r8.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e29); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e29); }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      peg$savedPos = s0;\n      s0 = peg$f8(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariation() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c12;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseline();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c13;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e32); }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f9(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsegameTerminationMarker() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c14) {\n      s1 = peg$c14;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e35); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c16) {\n          s1 = peg$c16;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e36); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s1 = peg$c17;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e37); }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parsecomment();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f10(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r9.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e39); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e38); }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (options.peg$library) {\n    return /** @type {any} */ ({\n      peg$result,\n      peg$currPos,\n      peg$FAILED,\n      peg$maxFailExpected,\n      peg$maxFailPos\n    });\n  }\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  StartRules: [\"pgn\"],\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}