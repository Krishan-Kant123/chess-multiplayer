{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishan kant\\\\Desktop\\\\Js\\\\game\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  socket,\n  roomId,\n  username\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!socket) return;\n    const handleNewMessage = message => {\n      setMessages(prev => [...prev, message]);\n    };\n    socket.on(\"chatMessage\", handleNewMessage);\n    return () => {\n      socket.off(\"chatMessage\", handleNewMessage);\n    };\n  }, [socket]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = () => {\n    if (input.trim() === \"\") return;\n    socket.emit(\"chatMessage\", {\n      roomId,\n      username,\n      message: input.trim()\n    });\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chat-header\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 2,\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Type a message...\",\n      className: \"chat-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      className: \"chat-send-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"ABrHAQDP7g0qYpnOwslR1WwKacs=\");\n_c = Chat;\nexport default Chat;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./Chat.css\";\n\n// const Chat = ({ socket, roomId, username }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!socket) return;\n\n//     const handleNewMessage = (message) => {\n//       setMessages((prev) => [...prev, message]);\n//     };\n\n//     socket.on(\"chatMessage\", handleNewMessage);\n\n//     return () => {\n//       socket.off(\"chatMessage\", handleNewMessage);\n//     };\n//   }, [socket]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   }, [messages]);\n\n//   const sendMessage = () => {\n//     if (input.trim() === \"\") return;\n\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\n//     setInput(\"\");\n//   };\n\n//   const handleKeyDown = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       sendMessage();\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <h3 className=\"chat-header\">Chat</h3>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => {\n//           const isOwnMessage = msg.username === username;\n//           return (\n//             <div\n//               key={idx}\n//               className={`message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`}\n//             >\n//               <div className=\"message-bubble\">\n//                 {!isOwnMessage && (\n//                   <div className=\"message-username\">{msg.username}</div>\n//                 )}\n//                 <div className=\"message-text\">{msg.message}</div>\n//               </div>\n//             </div>\n//           );\n//         })}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"chat-input-container\">\n//         <textarea\n//           rows={2}\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyDown={handleKeyDown}\n//           placeholder=\"Type a message...\"\n//           className=\"chat-input\"\n//         />\n//         <button onClick={sendMessage} className=\"chat-send-button\">\n//           Send\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","socket","roomId","username","_s","messages","setMessages","input","setInput","messagesEndRef","handleNewMessage","message","prev","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","emit","handleKeyDown","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ref","rows","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\n\r\nconst Chat = ({ socket, roomId, username }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleNewMessage = (message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    };\r\n\r\n    socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n    return () => {\r\n      socket.off(\"chatMessage\", handleNewMessage);\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h3 className=\"chat-header\">Chat</h3>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`chat-message ${\r\n              msg.username === username ? \"chat-message-sent\" : \"chat-message-received\"\r\n            }`}\r\n          >\r\n            <strong>{msg.username}: </strong>\r\n            <span>{msg.message}</span>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <textarea\r\n        rows={2}\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder=\"Type a message...\"\r\n        className=\"chat-input\"\r\n      />\r\n      <button onClick={sendMessage} className=\"chat-send-button\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import \"./Chat.css\";\r\n\r\n// const Chat = ({ socket, roomId, username }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [input, setInput] = useState(\"\");\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     if (!socket) return;\r\n\r\n//     const handleNewMessage = (message) => {\r\n//       setMessages((prev) => [...prev, message]);\r\n//     };\r\n\r\n//     socket.on(\"chatMessage\", handleNewMessage);\r\n\r\n//     return () => {\r\n//       socket.off(\"chatMessage\", handleNewMessage);\r\n//     };\r\n//   }, [socket]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   }, [messages]);\r\n\r\n//   const sendMessage = () => {\r\n//     if (input.trim() === \"\") return;\r\n\r\n//     socket.emit(\"chatMessage\", { roomId, username, message: input.trim() });\r\n//     setInput(\"\");\r\n//   };\r\n\r\n//   const handleKeyDown = (e) => {\r\n//     if (e.key === \"Enter\" && !e.shiftKey) {\r\n//       e.preventDefault();\r\n//       sendMessage();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chat-container\">\r\n//       <h3 className=\"chat-header\">Chat</h3>\r\n//       <div className=\"chat-messages\">\r\n//         {messages.map((msg, idx) => {\r\n//           const isOwnMessage = msg.username === username;\r\n//           return (\r\n//             <div\r\n//               key={idx}\r\n//               className={`message-wrapper ${isOwnMessage ? 'own-message' : 'other-message'}`}\r\n//             >\r\n//               <div className=\"message-bubble\">\r\n//                 {!isOwnMessage && (\r\n//                   <div className=\"message-username\">{msg.username}</div>\r\n//                 )}\r\n//                 <div className=\"message-text\">{msg.message}</div>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n//       <div className=\"chat-input-container\">\r\n//         <textarea\r\n//           rows={2}\r\n//           value={input}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           onKeyDown={handleKeyDown}\r\n//           placeholder=\"Type a message...\"\r\n//           className=\"chat-input\"\r\n//         />\r\n//         <button onClick={sendMessage} className=\"chat-send-button\">\r\n//           Send\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}