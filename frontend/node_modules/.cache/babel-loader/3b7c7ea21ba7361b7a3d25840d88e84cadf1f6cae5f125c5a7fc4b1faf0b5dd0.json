{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishan kant\\\\Desktop\\\\Js\\\\game\\\\frontend\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Chess } from \"chess.js\";\nimport { io } from \"socket.io-client\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [chess, setChess] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n  const [role, setRole] = useState(null);\n  useEffect(() => {\n    socket.emit(\"join-room\", roomId);\n    socket.on(\"assign-role\", assignedRole => {\n      setRole(assignedRole);\n    });\n    socket.on(\"move\", ({\n      from,\n      to,\n      promotion\n    }) => {\n      const newChess = new Chess(chess.fen());\n      const move = newChess.move({\n        from,\n        to,\n        promotion\n      });\n      if (move) {\n        setChess(newChess);\n        setFen(newChess.fen());\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [roomId, chess]);\n  const handleMove = move => {\n    try {\n      const newChess = new Chess(chess.fen());\n      const moveResult = newChess.move({\n        from: move.sourceSquare,\n        to: move.targetSquare,\n        promotion: \"q\" // default to queen\n      });\n      if (!moveResult) {\n        alert(\"Illegal move!\");\n        return;\n      }\n      setChess(newChess);\n      setFen(newChess.fen());\n      socket.emit(\"move\", {\n        roomId,\n        from: move.sourceSquare,\n        to: move.targetSquare,\n        promotion: \"q\"\n      });\n\n      // Game state checks (after a valid move)\n      if (newChess.in_checkmate()) {\n        alert(\"Checkmate! \" + (newChess.turn() === \"w\" ? \"Black\" : \"White\") + \" wins.\");\n        return;\n      }\n      if (newChess.in_stalemate()) {\n        alert(\"Stalemate! It's a draw.\");\n        return;\n      }\n      if (newChess.insufficient_material()) {\n        alert(\"Draw due to insufficient material.\");\n        return;\n      }\n      if (newChess.in_threefold_repetition()) {\n        alert(\"Draw by threefold repetition.\");\n        return;\n      }\n      if (newChess.in_draw()) {\n        alert(\"Game drawn by 50-move rule or repetition.\");\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error handling move:\", error);\n      alert(\"An error occurred while processing the move.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white text-xl mb-4 text-center\",\n        children: [\"Room ID: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        width: 500,\n        position: fen,\n        onDrop: handleMove,\n        orientation: role === \"black\" ? \"black\" : \"white\",\n        darkSquareStyle: {\n          backgroundColor: \"#B58863\"\n        },\n        lightSquareStyle: {\n          backgroundColor: \"#F0D9B5\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"9oZXcyziFV4VM4RhKVBafUt3nKs=\", false, function () {\n  return [useParams];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useParams","Chess","io","Chessboard","jsxDEV","_jsxDEV","socket","Room","_s","roomId","chess","setChess","fen","setFen","role","setRole","emit","on","assignedRole","from","to","promotion","newChess","move","disconnect","handleMove","moveResult","sourceSquare","targetSquare","alert","in_checkmate","turn","in_stalemate","insufficient_material","in_threefold_repetition","in_draw","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","position","onDrop","orientation","darkSquareStyle","backgroundColor","lightSquareStyle","_c","$RefreshReg$"],"sources":["C:/Users/krishan kant/Desktop/Js/game/frontend/src/components/Room.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Chess } from \"chess.js\";\r\nimport { io } from \"socket.io-client\";\r\nimport Chessboard from \"chessboardjsx\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const [chess, setChess] = useState(new Chess());\r\n  const [fen, setFen] = useState(\"start\");\r\n  const [role, setRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join-room\", roomId);\r\n\r\n    socket.on(\"assign-role\", (assignedRole) => {\r\n      setRole(assignedRole);\r\n    });\r\n\r\n    socket.on(\"move\", ({ from, to, promotion }) => {\r\n      const newChess = new Chess(chess.fen());\r\n      const move = newChess.move({ from, to, promotion });\r\n\r\n      if (move) {\r\n        setChess(newChess);\r\n        setFen(newChess.fen());\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId, chess]);\r\n\r\n  const handleMove = (move) => {\r\n    try {\r\n      const newChess = new Chess(chess.fen());\r\n      const moveResult = newChess.move({\r\n        from: move.sourceSquare,\r\n        to: move.targetSquare,\r\n        promotion: \"q\", // default to queen\r\n      });\r\n\r\n      if (!moveResult) {\r\n        alert(\"Illegal move!\");\r\n        return;\r\n      }\r\n\r\n      setChess(newChess);\r\n      setFen(newChess.fen());\r\n\r\n      socket.emit(\"move\", {\r\n        roomId,\r\n        from: move.sourceSquare,\r\n        to: move.targetSquare,\r\n        promotion: \"q\",\r\n      });\r\n\r\n      // Game state checks (after a valid move)\r\n      if (newChess.in_checkmate()) {\r\n        alert(\"Checkmate! \" + (newChess.turn() === \"w\" ? \"Black\" : \"White\") + \" wins.\");\r\n        return;\r\n      }\r\n\r\n      if (newChess.in_stalemate()) {\r\n        alert(\"Stalemate! It's a draw.\");\r\n        return;\r\n      }\r\n\r\n      if (newChess.insufficient_material()) {\r\n        alert(\"Draw due to insufficient material.\");\r\n        return;\r\n      }\r\n\r\n      if (newChess.in_threefold_repetition()) {\r\n        alert(\"Draw by threefold repetition.\");\r\n        return;\r\n      }\r\n\r\n      if (newChess.in_draw()) {\r\n        alert(\"Game drawn by 50-move rule or repetition.\");\r\n        return;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error handling move:\", error);\r\n      alert(\"An error occurred while processing the move.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen bg-gray-900\">\r\n      <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-white text-xl mb-4 text-center\">Room ID: {roomId}</h2>\r\n        <Chessboard\r\n          width={500}\r\n          position={fen}\r\n          onDrop={handleMove}\r\n          orientation={role === \"black\" ? \"black\" : \"white\"}\r\n          darkSquareStyle={{ backgroundColor: \"#B58863\" }}\r\n          lightSquareStyle={{ backgroundColor: \"#F0D9B5\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}